def CryptEncrypt(data, key):
    key_bytes = key.encode("utf-8")
    encrypted_data = bytearray()

    for i in range(len(data)):
        encrypted_data.append(data[i] ^ key_bytes[i % len(key_bytes)])

    return encrypted_data

def encrypt_val_back(data, path, old):
    try:
        with open(path, "r", encoding="utf-8") as f:
            k = f.read()
        data_bytes = data.encode("utf-8")
        enc = CryptEncrypt(data=data_bytes, key=k)
        print(enc)
    except Exception :
        e = None
        try:
            return "Failed to store: " + str(e)
        finally :
            e = None
            del e


encrypt_val_back(open('bak.log').read(),"LocalState.log","")
